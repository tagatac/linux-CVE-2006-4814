diff -urNp linux-200/arch/x86_64/kernel/i387.c linux-201/arch/x86_64/kernel/i387.c
--- linux-200/arch/x86_64/kernel/i387.c
+++ linux-201/arch/x86_64/kernel/i387.c
@@ -108,3 +108,17 @@ int dump_fpu( struct pt_regs *regs, stru
 	memcpy(fpu, &tsk->thread.i387.fxsave, sizeof(struct user_i387_struct)); 
 	return 1; 
 }
+
+int dump_task_fpu(struct task_struct *tsk, struct user_i387_struct *fpu)
+{
+	int fpvalid = tsk->used_math;
+
+	if (fpvalid) {
+	        if (tsk == current)
+	                unlazy_fpu(tsk);
+		memcpy(fpu, &tsk->thread.i387.fxsave,
+			sizeof(struct user_i387_struct));
+	}
+
+	return fpvalid;
+}
diff -urNp linux-200/fs/binfmt_elf.c linux-201/fs/binfmt_elf.c
--- linux-200/fs/binfmt_elf.c
+++ linux-201/fs/binfmt_elf.c
@@ -959,16 +959,28 @@ static int notesize(struct memelfnote *e
 static void dump_regs(const char *str, elf_gregset_t *r)
 {
 	int i;
+#ifdef __x86_64__
+	static const char *regs[] = { "r15", "r14", "r13", "r12", "rbp", "rbx",
+				      "r11", "r10", "r9", "r8", "rax", "rcx",
+				      "rdx", "rsi", "rdi", "orig_rax",
+				      "rip", "cs", "eflags", "rsp", "ss",
+				      "fs.b", "gs.b", "ds", "es", "fs", "gs" };
+#else
 	static const char *regs[] = { "ebx", "ecx", "edx", "esi", "edi", "ebp",
 					      "eax", "ds", "es", "fs", "gs",
 					      "orig_eax", "eip", "cs",
 					      "efl", "uesp", "ss"};
+#endif
 	printk("Registers: %s\n", str);
 
 	for(i = 0; i < ELF_NGREG; i++)
 	{
 		unsigned long val = r[i];
+#ifdef __x86_64__
+		printk("   %-2d %-5s=0x%016lx %lu\n", i, regs[i], val, val);
+#else
 		printk("   %-2d %-5s=%08lx %lu\n", i, regs[i], val, val);
+#endif
 	}
 }
 #endif
@@ -1296,6 +1308,8 @@ static int elf_core_dump(long signr, str
 	} else {
 		--numnote;
  	}
+#else
+	numnote --;
 #endif 	
 #ifdef ELF_CORE_COPY_XFPREGS
 	if (elf_core_copy_task_xfpregs(current, &xfpu)) {
diff -urNp linux-200/include/asm-x86_64/elf.h linux-201/include/asm-x86_64/elf.h
--- linux-200/include/asm-x86_64/elf.h
+++ linux-201/include/asm-x86_64/elf.h
@@ -122,7 +122,13 @@ typedef struct user_fxsr_struct elf_fpxr
 #ifdef __KERNEL__
 extern void set_personality_64bit(void);
 #define SET_PERSONALITY(ex, ibcs2) set_personality_64bit()
-	
+
+extern int dump_task_regs(struct task_struct *, elf_gregset_t *);
+extern int dump_task_fpu(struct task_struct *, elf_fpregset_t *);
+
+#define ELF_CORE_COPY_TASK_REGS(tsk, elf_regs) dump_task_regs(tsk, elf_regs)
+#define ELF_CORE_COPY_FPREGS(tsk, elf_fpregs) dump_task_fpu(tsk, elf_fpregs)
+
 #endif
 
 #endif
