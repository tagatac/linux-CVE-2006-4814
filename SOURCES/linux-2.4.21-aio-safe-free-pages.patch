diff -urNp linux-1228/mm/page_alloc.c linux-1230/mm/page_alloc.c
--- linux-1228/mm/page_alloc.c
+++ linux-1230/mm/page_alloc.c
@@ -64,6 +64,33 @@ static int zone_extrafree_max[MAX_NR_ZON
 	|| ((zone) != page_zone(page))					\
 )
 
+static void FASTCALL(__free_pages_ok (struct page *page, unsigned int order));
+
+static spinlock_t free_pages_ok_no_irq_lock = SPIN_LOCK_UNLOCKED;
+struct page *free_pages_ok_no_irq_head;
+
+static void do_free_pages_ok_no_irq(void * arg)
+{
+	struct page * page, * __page;
+
+	spin_lock_irq(&free_pages_ok_no_irq_lock);
+
+	page = free_pages_ok_no_irq_head;
+	free_pages_ok_no_irq_head = NULL;
+
+	spin_unlock_irq(&free_pages_ok_no_irq_lock);
+
+	while (page) {
+		__page = page;
+		page = page->next_hash;
+		__free_pages_ok(__page, __page->index);
+	}
+}
+
+static struct tq_struct free_pages_ok_no_irq_task = {
+	.routine	= do_free_pages_ok_no_irq,
+};
+
 #ifndef CONFIG_HUGETLB_PAGE
 #define prep_compound_page(page, order) do { } while (0)
 #define destroy_compound_page(page, order) do { } while (0)
@@ -156,7 +183,6 @@ static void destroy_compound_page(struct
  * -- wli
  */
 
-static void FASTCALL(__free_pages_ok (struct page *page, unsigned int order));
 static void __free_pages_ok (struct page *page, unsigned int order)
 {
 	unsigned long index, page_idx, mask, flags;
@@ -170,8 +196,20 @@ static void __free_pages_ok (struct page
 	 * a reference to a page in order to pin it for io. -ben
 	 */
 	if (PageLRU(page)) {
-		if (unlikely(in_interrupt()))
-			BUG();
+		if (unlikely(in_interrupt())) {
+			unsigned long flags;
+
+			spin_lock_irqsave(&free_pages_ok_no_irq_lock, flags);
+
+			page->next_hash = free_pages_ok_no_irq_head;
+			free_pages_ok_no_irq_head = page;
+			page->index = order;
+
+			spin_unlock_irqrestore(&free_pages_ok_no_irq_lock, flags);
+
+			schedule_task(&free_pages_ok_no_irq_task);
+			return;
+		}
 		lru_cache_del(page);
 	}
 
