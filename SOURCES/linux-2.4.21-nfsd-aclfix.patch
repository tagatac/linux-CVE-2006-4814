--- linux-2.4.21/fs/nfsd/nfs3xdr.c.org	2003-06-19 10:05:59.000000000 -0400
+++ linux-2.4.21/fs/nfsd/nfs3xdr.c	2003-06-20 10:58:24.000000000 -0400
@@ -161,17 +161,22 @@
 
 	if (IS_POSIXACL(inode) && EX_POSTXACL(fhp->fh_export)) {
 		struct posix_acl *acl = nfsd_get_posix_acl(fhp,ACL_TYPE_ACCESS);
-
-		if (IS_ERR(acl))
-			return 0;
-		else if (acl) {
+		/*
+		 * If IS_ERR(acl) is true, there is really not much that can
+		 * be done at this point since returning zero just causes
+		 * the client to retry (forever) and returning something
+		 * like EOPNOTSUPP for a getattr really doesn't make much
+		 * sense either. So if there is an error, its ignored
+		 * and things go on as if it never happen...
+		 */
+		if (!IS_ERR(acl) && acl) {
 			int error = posix_acl_masq_nfs_mode(acl, &mode);
 			posix_acl_release(acl);
 			if (error)
-				return 0;
+				mode = inode->i_mode;
 		}
 	}
-  
+
 	*p++ = htonl(nfs3_ftypes[(inode->i_mode & S_IFMT) >> 12]);
 	*p++ = htonl((u32) mode);
 	*p++ = htonl((u32) inode->i_nlink);
--- linux-2.4.21/fs/nfsd/nfsxdr.c.org	2003-06-19 10:05:59.000000000 -0400
+++ linux-2.4.21/fs/nfsd/nfsxdr.c	2003-06-20 10:57:32.000000000 -0400
@@ -140,14 +140,19 @@
   
 	if (IS_POSIXACL(inode) && EX_POSTXACL(fhp->fh_export)) {
 		struct posix_acl *acl = nfsd_get_posix_acl(fhp,ACL_TYPE_ACCESS);
-
-		if (IS_ERR(acl))
-			return 0;
-		else if (acl) {
+		/*
+		 * If IS_ERR(acl) is true, there is really not much that can
+		 * be done at this point since returning zero just causes 
+		 * the client to retry (forever) and returning something
+		 * like EOPNOTSUPP for a getattr really doesn't make much
+		 * sense either. So if there is an error, its ignored 
+		 * and things go on as if it never happen...
+		 */
+		if (!IS_ERR(acl) && acl) {
 			int error = posix_acl_masq_nfs_mode(acl, &mode);
 			posix_acl_release(acl);
 			if (error)
-				return 0;
+				mode = inode->i_mode;
 		}
 	}
