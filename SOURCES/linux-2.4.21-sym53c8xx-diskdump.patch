diff -urNp linux-5430/drivers/scsi/sym53c8xx.c linux-5431/drivers/scsi/sym53c8xx.c
--- linux-5430/drivers/scsi/sym53c8xx.c
+++ linux-5431/drivers/scsi/sym53c8xx.c
@@ -145,6 +145,7 @@
 #include "hosts.h"
 #include "constants.h"
 #include "sd.h"
+#include "scsi_dump.h"
 
 #include <linux/types.h>
 
@@ -13813,6 +13814,11 @@ out:
 
 	ncr_flush_done_cmds(done_list);
 
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+	if (crashdump_mode())
+		ncr_init(np, 1, bootverbose ? "diskdump" : NULL, HS_RESET);
+#endif
+
 	return sts;
 }
 
@@ -14752,6 +14758,40 @@ sym_read_Tekram_nvram (ncr_slot *np, u_s
 
 #endif	/* SCSI_NCR_NVRAM_SUPPORT */
 
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+static int sym53c8xx_sanity_check_handler(struct scsi_device *sd)
+{
+	ncb_p np = ((struct host_data *)sd->host->hostdata)->ncb;
+
+	if (np == NULL)
+		return -ENXIO;
+
+	del_timer_sync(&np->timer);
+	add_timer(&np->timer);
+
+	return 0;
+}
+
+static void sym53c8xx_poll_handler(struct scsi_device *sd)
+{
+	ncb_p np = ((struct host_data *)sd->host->hostdata)->ncb;
+	Scsi_Cmnd *done_list;
+
+	ncr_exception(np);
+
+	done_list = np->done_list;
+	np->done_list = 0;
+
+	if (done_list)
+		ncr_flush_done_cmds(done_list);
+}
+
+static struct scsi_dump_ops sym53c8xx_dump_ops = {
+	.sanity_check   = sym53c8xx_sanity_check_handler,
+	.poll           = sym53c8xx_poll_handler
+};
+#endif
+
 /*
 **	Module stuff
 */
@@ -14762,6 +14802,11 @@ MODULE_LICENSE("GPL");
 static
 #endif
 #if LINUX_VERSION_CODE >= LinuxVersionCode(2,4,0) || defined(MODULE)
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+Scsi_Host_Template_dump driver_template_dump = SYM53C8XX;
+#define driver_template        (driver_template_dump.hostt)
+#else
 Scsi_Host_Template driver_template = SYM53C8XX;
+#endif
 #include "scsi_module.c"
 #endif
diff -urNp linux-5430/drivers/scsi/sym53c8xx.h linux-5431/drivers/scsi/sym53c8xx.h
--- linux-5430/drivers/scsi/sym53c8xx.h
+++ linux-5431/drivers/scsi/sym53c8xx.h
@@ -68,12 +68,27 @@
 #if (LINUX_VERSION_CODE >= 0x020400) || defined(HOSTS_C) || defined(MODULE)
 
 #include <scsi/scsicam.h>
+#include <linux/diskdumplib.h>
+
+/******************************** Disk dump ***********************************/
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+#undef  add_timer
+#define add_timer	diskdump_add_timer
+#undef  del_timer_sync
+#define del_timer_sync	diskdump_del_timer
+#undef  del_timer
+#define del_timer	diskdump_del_timer
+#undef  mod_timer
+#define mod_timer	diskdump_mod_timer
+#endif
 
 int sym53c8xx_abort(Scsi_Cmnd *);
 int sym53c8xx_detect(Scsi_Host_Template *tpnt);
 const char *sym53c8xx_info(struct Scsi_Host *host);
 int sym53c8xx_queue_command(Scsi_Cmnd *, void (*done)(Scsi_Cmnd *));
 int sym53c8xx_reset(Scsi_Cmnd *, unsigned int);
+static int sym53c8xx_sanity_check_handler(struct scsi_device *sd);
+static void sym53c8xx_poll_handler(struct scsi_device *sd);
 
 #ifdef MODULE
 int sym53c8xx_release(struct Scsi_Host *);
@@ -84,7 +99,7 @@ int sym53c8xx_release(struct Scsi_Host *
 
 #if	LINUX_VERSION_CODE >= LinuxVersionCode(2,1,75)
 
-#define SYM53C8XX {     name:           "",			\
+#define _SYM53C8XX	name:           "",			\
 			detect:         sym53c8xx_detect,	\
 			release:        sym53c8xx_release,	\
 			info:           sym53c8xx_info, 	\
@@ -98,21 +113,33 @@ int sym53c8xx_release(struct Scsi_Host *
 			cmd_per_lun:    SCSI_NCR_CMD_PER_LUN,	\
 			max_sectors:    MAX_SEGMENTS*8,		\
 			use_clustering: DISABLE_CLUSTERING,	\
-			highmem_io:	1}
+			highmem_io:	1
 
 #else
 
-#define SYM53C8XX {	NULL, NULL, NULL, NULL,				\
+#define _SYM53C8XX 	NULL, NULL, NULL, NULL,				\
 			NULL,			sym53c8xx_detect,	\
 			sym53c8xx_release,	sym53c8xx_info,	NULL,	\
 			sym53c8xx_queue_command,sym53c8xx_abort,	\
 			sym53c8xx_reset, NULL,	scsicam_bios_param,	\
 			SCSI_NCR_CAN_QUEUE,	7,			\
 			SCSI_NCR_SG_TABLESIZE,	SCSI_NCR_CMD_PER_LUN,	\
-			0,	0,	DISABLE_CLUSTERING} 
+			0,	0,	DISABLE_CLUSTERING 
  
 #endif /* LINUX_VERSION_CODE */
 
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+#define SYM53C8XX {							\
+	.hostt = {							\
+		_SYM53C8XX,						\
+		.disk_dump		= 1				\
+	},								\
+	.dump_ops			= &sym53c8xx_dump_ops		\
+}
+#else
+#define SYM53C8XX { _SYM53C8XX }
+#endif
+
 #endif /* defined(HOSTS_C) || defined(MODULE) */ 
 
 #endif /* SYM53C8XX_H */
