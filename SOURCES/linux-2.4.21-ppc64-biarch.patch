--- linux-2.4.20/arch/ppc64/Makefile.biarch	2003-04-15 11:16:40.000000000 -0400
+++ linux-2.4.20/arch/ppc64/Makefile	2003-04-15 11:19:22.000000000 -0400
@@ -19,6 +19,13 @@
 CHECKS		= checks
 endif
 
+HAS_BIARCH      := $(shell if gcc -m64 -S -o /dev/null -xc /dev/null > /dev/null 2>&1; then echo y; else echo n; fi;)
+ifeq ($(HAS_BIARCH),y)
+AS              := $(AS) -64
+LD              := $(LD) -m elf64ppc
+CC		:= gcc -m64
+endif
+
 LINKFLAGS	= -T arch/ppc64/vmlinux.lds -Bstatic \
 		-e $(KERNELLOAD) -Ttext $(KERNELLOAD)
 CFLAGS		:= $(CFLAGS) -fsigned-char -msoft-float -pipe \
--- linux-2.4.20/arch/ppc64/boot/Makefile.biarch	2003-04-24 00:38:18.000000000 -0400
+++ linux-2.4.20/arch/ppc64/boot/Makefile	2003-04-24 01:04:44.000000000 -0400
@@ -23,10 +23,17 @@
 CROSS32_COMPILE =
 #CROSS32_COMPILE = /usr/local/ppc/bin/powerpc-linux-
 
+HAS_BIARCH      := $(shell if gcc -m32 -S -o /dev/null -xc /dev/null > /dev/null 2>&1; then echo y; else echo n; fi;)
+ifeq ($(HAS_BIARCH),y)
+BOOTCC := gcc -m32
+BOOTLD := ld -m elf32ppclinux
+BOOTAS := as -32
+else
 BOOTCC = $(CROSS32_COMPILE)gcc
-BOOTCFLAGS = $(HOSTCFLAGS) -fno-builtin -I$(HPATH)
 BOOTLD = $(CROSS32_COMPILE)ld
 BOOTAS = $(CROSS32_COMPILE)as
+endif
+BOOTCFLAGS = $(HOSTCFLAGS) -fno-builtin -I$(HPATH)
 BOOTAFLAGS = -D__ASSEMBLY__ $(HOSTCFLAGS) -I$(HPATH)
 
 OBJCOPYFLAGS = contents,alloc,load,readonly,data
--- linux-2.4.20/arch/ppc64/boot/zImage.lds.biarch	2003-04-24 01:06:40.000000000 -0400
+++ linux-2.4.20/arch/ppc64/boot/zImage.lds	2003-04-24 01:06:28.000000000 -0400
@@ -1,4 +1,4 @@
-OUTPUT_ARCH(powerpc)
+OUTPUT_ARCH(powerpc:common)
 SEARCH_DIR(/lib); SEARCH_DIR(/usr/lib); SEARCH_DIR(/usr/local/lib); SEARCH_DIR(/usr/local/powerpc-any-elf/lib);
 /* Do we need any of these for elf?
    __DYNAMIC = 0;    */
