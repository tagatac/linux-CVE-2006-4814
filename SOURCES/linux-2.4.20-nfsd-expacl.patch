--- linux-2.4.20/fs/nfsd/nfs3xdr.c.org	2003-06-06 13:30:47.000000000 -0400
+++ linux-2.4.20/fs/nfsd/nfs3xdr.c	2003-06-06 16:43:21.000000000 -0400
@@ -159,8 +159,7 @@
 	struct inode	*inode = fhp->fh_dentry->d_inode;
 	mode_t		mode = inode->i_mode;
 
-	if (IS_POSIXACL(inode) &&
-	    nfs_permission_mode == NFS_FILE_MODE_PERMISSION_BITS_SECURE) {
+	if (IS_POSIXACL(inode) && EX_POSTXACL(fhp->fh_export)) {
 		struct posix_acl *acl = nfsd_get_posix_acl(fhp,ACL_TYPE_ACCESS);
 
 		if (IS_ERR(acl))
--- linux-2.4.20/fs/nfsd/nfsxdr.c.org	2003-06-06 13:30:47.000000000 -0400
+++ linux-2.4.20/fs/nfsd/nfsxdr.c	2003-06-06 16:44:00.000000000 -0400
@@ -138,8 +138,7 @@
  	mode_t mode = inode->i_mode;
 	int type = (inode->i_mode & S_IFMT);
   
-	if (IS_POSIXACL(inode) &&
-	    nfs_permission_mode == NFS_FILE_MODE_PERMISSION_BITS_SECURE) {
+	if (IS_POSIXACL(inode) && EX_POSTXACL(fhp->fh_export)) {
 		struct posix_acl *acl = nfsd_get_posix_acl(fhp,ACL_TYPE_ACCESS);
 
 		if (IS_ERR(acl))
--- linux-2.4.20/fs/nfsd/nfsctl.c.org	2003-06-06 13:30:47.000000000 -0400
+++ linux-2.4.20/fs/nfsd/nfsctl.c	2003-06-06 16:54:38.000000000 -0400
@@ -300,55 +300,15 @@
 	return err;
 }
 
-/*
-   About the nfs_permission_mode module parameter:
-
-   With Posix Access Control Lists, pre-NFS3 clients and older Linux
-   NFSv3 clients in some cases mis-interpret the file mode permission
-   bits, and either allow the remote user to read data she is not
-   permitted to, or deny the user read access that should be granted.
-   (With proper NFSv3, the access RPC is used to check access, and
-   access decisions are not implemented on the client.)
-
-   The nfs_permission_mode module parameter can either send the mode
-   permission bits (inode->i_mode & S_IRWXUGO) of files that have
-   Access Control Lists unchanged, or remove all permissions that
-   might lead to wrong decisions on the client machine.
-   
-   The file mode permission bits should only be set to 'unchanged' in
-   an environment where it is known that all NFSv3 clients use the
-   access RPC.  (The file mode permission bits for NFSv2 clients are
-   always "secured".)
-
-   Default value changed from _SECURE to _UNCHANGED since _SECURE may
-   lead to user surprise.
-*/
-int nfs_permission_mode = NFS_FILE_MODE_PERMISSION_BITS_UNCHANGED;
-
 EXPORT_NO_SYMBOLS;
 MODULE_AUTHOR("Olaf Kirch <okir@monad.swb.de>");
 MODULE_LICENSE("GPL");
 
-MODULE_PARM(nfs_permission_mode, "i");
-MODULE_PARM_DESC(nfs_permission_mode,
-               "nfsd file mode permission bits: 0=unchanged, 1=secure (0)");
-
 #ifdef MODULE
 struct nfsd_linkage nfsd_linkage_s = {
 	do_nfsservctl: handle_sys_nfsservctl,
 	owner: THIS_MODULE,
 };
-#else
-static int __init
-nfs_permission_mode_setup(char *str)
-{
-	nfs_permission_mode = simple_strtol(str, &str, 10) ?
-		NFS_FILE_MODE_PERMISSION_BITS_SECURE :
-		NFS_FILE_MODE_PERMISSION_BITS_UNCHANGED;
-	return 0;
-}
-
-__setup("nfs_permission_mode=", nfs_permission_mode_setup);
 #endif
 
 /*
--- linux-2.4.20/include/linux/nfsd/export.h.org	2003-06-06 13:54:24.000000000 -0400
+++ linux-2.4.20/include/linux/nfsd/export.h	2003-06-07 05:24:33.000000000 -0400
@@ -40,6 +40,7 @@
 #define	NFSEXP_NOAUTHNLM	0x0800		/* Don't authenticate NLM requests - just trust */
 #define NFSEXP_MSNFS		0x1000	/* do silly things that MS clients expect */
 #define NFSEXP_FSID		0x2000
+#define NFSEXP_POSTXACL		0x4000	/* turn on acl support */
 #define NFSEXP_ALLFLAGS		0x3FFF
 
 
@@ -83,6 +84,19 @@
 #define EX_CROSSMNT(exp)	((exp)->ex_flags & NFSEXP_CROSSMNT)
 #define EX_SUNSECURE(exp)	((exp)->ex_flags & NFSEXP_SUNSECURE)
 #define EX_WGATHER(exp)		((exp)->ex_flags & NFSEXP_GATHERED_WRITES)
+/*
+   With Posix Access Control Lists, pre-NFS3 clients and older Linux
+   NFSv3 clients in some cases mis-interpret the file mode permission
+   bits, and either allow the remote user to read data she is not
+   permitted to, or deny the user read access that should be granted.
+   (With proper NFSv3, the access RPC is used to check access, and
+   access decisions are not implemented on the client.)
+
+   The acl option should only be set in an environment where it is known 
+   that all not clients are using the NFSv3 ACCESS RPC.  (i.e. This option 
+   should always be set for NFSv2 clients.)
+*/
+#define EX_POSTXACL(exp)	((exp)->ex_flags & NFSEXP_POSTXACL)
 
 
 /*
--- linux-2.4.20/include/linux/nfsd/nfsd.h.org	2003-06-06 13:54:24.000000000 -0400
+++ linux-2.4.20/include/linux/nfsd/nfsd.h	2003-06-07 05:24:59.000000000 -0400
@@ -202,12 +202,6 @@
  */
 extern struct timeval	nfssvc_boot;
 
-/* nfs_permission_mode module/kernel parameter */
-#define NFS_FILE_MODE_PERMISSION_BITS_UNCHANGED 0
-#define NFS_FILE_MODE_PERMISSION_BITS_SECURE 1
-
-extern int nfs_permission_mode;
-
 #endif /* __KERNEL__ */
 
 #endif /* LINUX_NFSD_NFSD_H */

