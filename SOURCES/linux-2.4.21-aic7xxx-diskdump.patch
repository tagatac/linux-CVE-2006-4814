diff -urNp linux-5732/drivers/scsi/aic7xxx/aic79xx_osm.c linux-5733/drivers/scsi/aic7xxx/aic79xx_osm.c
--- linux-5732/drivers/scsi/aic7xxx/aic79xx_osm.c
+++ linux-5733/drivers/scsi/aic7xxx/aic79xx_osm.c
@@ -787,6 +787,8 @@ static int	   ahd_linux_biosparam(Disk *
 static int	   ahd_linux_bus_reset(Scsi_Cmnd *);
 static int	   ahd_linux_dev_reset(Scsi_Cmnd *);
 static int	   ahd_linux_abort(Scsi_Cmnd *);
+static int	   ahd_linux_sanity_check(Scsi_Device *);
+static void	   ahd_linux_poll(Scsi_Device *);
 
 /*
  * Calculate a safe value for AHD_NSEG (as expressed through ahd_linux_nseg).
@@ -1666,7 +1668,13 @@ ahd_linux_bus_reset(Scsi_Cmnd *cmd)
 	return (SUCCESS);
 }
 
-Scsi_Host_Template aic79xx_driver_template = {
+static struct scsi_dump_ops ahd_dump_ops = {
+	.sanity_check	= ahd_linux_sanity_check,
+	.poll		= ahd_linux_poll,
+};
+
+Scsi_Host_Template_dump aic79xx_driver_template_dump = {
+	.hostt = {
 	.module			= THIS_MODULE,
 	.name			= "aic79xx",
 	.proc_info		= ahd_linux_proc_info,
@@ -1710,6 +1718,10 @@ Scsi_Host_Template aic79xx_driver_templa
 	.use_new_eh_code	= 1,
 #endif
 	.vary_io                = 1,
+
+	.disk_dump		= 1,
+	},
+	.dump_ops		= &ahd_dump_ops,
 };
 
 /**************************** Tasklet Handler *********************************/
@@ -4210,6 +4222,39 @@ ahd_linux_isr(int irq, void *dev_id, str
 	return IRQ_RETVAL(ours);
 }
 
+static int
+ahd_linux_sanity_check(Scsi_Device *device)
+{
+	struct	ahd_softc *ahd;
+	struct	ahd_linux_device *dev;
+
+	ahd = *(struct ahd_softc **)device->host->hostdata;
+	dev = ahd_linux_get_device(ahd, device->channel,
+				   device->id, device->lun,
+					   /*alloc*/FALSE);
+	if (dev == NULL)
+		return -ENXIO;
+	if (ahd->platform_data->qfrozen || dev->qfrozen)
+		return -EBUSY;
+	if (spin_is_locked(&ahd->platform_data->spin_lock))
+		return -EBUSY;
+	return 0;
+}
+
+static void
+ahd_linux_poll(Scsi_Device *device)
+{
+	struct	ahd_softc *ahd;
+	struct  ahc_linux_device *dev;
+	int	ours;
+
+	ahd = *(struct ahd_softc **)device->host->hostdata;
+	ours = ahd_intr(ahd);
+	if (ahd_linux_next_device_to_run(ahd) != NULL)
+		ahd_schedule_runq(ahd);
+	ahd_linux_run_complete_queue(ahd);
+}
+
 void
 ahd_platform_flushwork(struct ahd_softc *ahd)
 {
diff -urNp linux-5732/drivers/scsi/aic7xxx/aic79xx_osm.h linux-5733/drivers/scsi/aic7xxx/aic79xx_osm.h
--- linux-5732/drivers/scsi/aic7xxx/aic79xx_osm.h
+++ linux-5733/drivers/scsi/aic7xxx/aic79xx_osm.h
@@ -51,6 +51,7 @@
 #include <linux/smp_lock.h>
 #include <linux/version.h>
 #include <linux/module.h>
+#include <linux/diskdumplib.h>
 #include <asm/byteorder.h>
 #include <asm/io.h>
 
@@ -71,6 +72,8 @@
 #include "scsi.h"
 #include "hosts.h"
 
+#include "scsi_dump.h"
+
 /* Name space conflict with BSD queue macros */
 #ifdef LIST_HEAD
 #undef LIST_HEAD
@@ -97,6 +100,20 @@
 /* No debugging code. */
 #endif
 
+/******************************** Disk dump ***********************************/
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+#undef  add_timer
+#define add_timer	diskdump_add_timer
+#undef  del_timer_sync
+#define del_timer_sync	diskdump_del_timer
+#undef  del_timer
+#define del_timer	diskdump_del_timer
+#undef  mod_timer
+#define mod_timer	diskdump_mod_timer
+
+#define tasklet_schedule	diskdump_tasklet_schedule
+#endif
+
 /********************************** Misc Macros *******************************/
 #define	roundup(x, y)   ((((x)+((y)-1))/(y))*(y))
 #define	powerof2(x)	((((x)-1)&(x))==0)
@@ -141,7 +158,8 @@ typedef Scsi_Cmnd      *ahd_io_ctx_t;
 /************************* Configuration Data *********************************/
 extern uint32_t aic79xx_allow_memio;
 extern int aic79xx_detect_complete;
-extern Scsi_Host_Template aic79xx_driver_template;
+extern Scsi_Host_Template_dump aic79xx_driver_template_dump;
+#define aic79xx_driver_template (aic79xx_driver_template_dump.hostt)
 
 /***************************** Bus Space/DMA **********************************/
 
diff -urNp linux-5732/drivers/scsi/aic7xxx/aic7xxx_osm.c linux-5733/drivers/scsi/aic7xxx/aic7xxx_osm.c
--- linux-5732/drivers/scsi/aic7xxx/aic7xxx_osm.c
+++ linux-5733/drivers/scsi/aic7xxx/aic7xxx_osm.c
@@ -774,6 +774,8 @@ static int	   ahc_linux_biosparam(Disk *
 static int	   ahc_linux_bus_reset(Scsi_Cmnd *);
 static int	   ahc_linux_dev_reset(Scsi_Cmnd *);
 static int	   ahc_linux_abort(Scsi_Cmnd *);
+static int	   ahc_linux_sanity_check(Scsi_Device *);
+static void	   ahc_linux_poll(Scsi_Device *);
 
 /*
  * Calculate a safe value for AHC_NSEG (as expressed through ahc_linux_nseg).
@@ -1294,7 +1296,13 @@ ahc_linux_bus_reset(Scsi_Cmnd *cmd)
 	return SUCCESS;
 }
 
-Scsi_Host_Template aic7xxx_driver_template = {
+static struct scsi_dump_ops ahc_dump_ops = {
+	.sanity_check	= ahc_linux_sanity_check,
+	.poll		= ahc_linux_poll,
+};
+
+Scsi_Host_Template_dump aic7xxx_driver_template_dump = {
+	.hostt = {
 	.module			= THIS_MODULE,
 	.name			= "aic7xxx",
 	.proc_info		= ahc_linux_proc_info,
@@ -1338,6 +1346,10 @@ Scsi_Host_Template aic7xxx_driver_templa
 	.use_new_eh_code	= 1,
 #endif
 	.vary_io                = 1,
+
+	.disk_dump		= 1,
+	},
+	.dump_ops		= &ahc_dump_ops,
 };
 
 /**************************** Tasklet Handler *********************************/
@@ -3881,6 +3893,41 @@ ahc_linux_isr(int irq, void *dev_id, str
 	return IRQ_RETVAL(ours);
 }
 
+static int
+ahc_linux_sanity_check(Scsi_Device *device)
+{
+	struct	ahc_softc *ahc;
+	struct	ahc_linux_device *dev;
+
+	ahc = *(struct ahc_softc **)device->host->hostdata;
+	dev = ahc_linux_get_device(ahc, device->channel,
+				   device->id, device->lun,
+					   /*alloc*/FALSE);
+	if (dev == NULL)
+		return -ENXIO;
+	if (ahc->platform_data->qfrozen || dev->qfrozen)
+		return -EBUSY;
+	if (spin_is_locked(&ahc->platform_data->spin_lock))
+		return -EBUSY;
+	return 0;
+}
+
+static void
+ahc_linux_poll(Scsi_Device *device)
+{
+	struct	ahc_softc *ahc;
+	struct ahc_linux_device *dev;
+
+	ahc = *(struct ahc_softc **)device->host->hostdata;
+	ahc_intr(ahc);
+	while ((dev = ahc_linux_next_device_to_run(ahc)) != NULL) {
+		TAILQ_REMOVE(&ahc->platform_data->device_runq, dev, links);
+		dev->flags &= ~AHC_DEV_ON_RUN_LIST;
+		ahc_linux_check_device_queue(ahc, dev);
+	}
+	ahc_linux_run_complete_queue(ahc);
+}
+
 void
 ahc_platform_flushwork(struct ahc_softc *ahc)
 {
diff -urNp linux-5732/drivers/scsi/aic7xxx/aic7xxx_osm.h linux-5733/drivers/scsi/aic7xxx/aic7xxx_osm.h
--- linux-5732/drivers/scsi/aic7xxx/aic7xxx_osm.h
+++ linux-5733/drivers/scsi/aic7xxx/aic7xxx_osm.h
@@ -68,6 +68,7 @@
 #include <linux/smp_lock.h>
 #include <linux/version.h>
 #include <linux/module.h>
+#include <linux/diskdumplib.h>
 #include <asm/byteorder.h>
 #include <asm/io.h>
 
@@ -88,6 +89,8 @@
 #include "scsi.h"
 #include "hosts.h"
 
+#include "scsi_dump.h"
+
 /* Name space conflict with BSD queue macros */
 #ifdef LIST_HEAD
 #undef LIST_HEAD
@@ -153,7 +156,8 @@ typedef Scsi_Cmnd      *ahc_io_ctx_t;
 extern u_int aic7xxx_no_probe;
 extern u_int aic7xxx_allow_memio;
 extern int aic7xxx_detect_complete;
-extern Scsi_Host_Template aic7xxx_driver_template;
+extern Scsi_Host_Template_dump aic7xxx_driver_template_dump;
+#define aic7xxx_driver_template (aic7xxx_driver_template_dump.hostt)
 
 /***************************** Bus Space/DMA **********************************/
 
@@ -254,6 +258,22 @@ int	ahc_dmamap_unload(struct ahc_softc *
  */
 #define ahc_dmamap_sync(ahc, dma_tag, dmamap, offset, len, op)
 
+
+/******************************** Disk dump ***********************************/
+#if defined(CONFIG_DISKDUMP) || defined(CONFIG_DISKDUMP_MODULE)
+#undef  add_timer
+#define add_timer	diskdump_add_timer
+#undef  del_timer_sync
+#define del_timer_sync	diskdump_del_timer
+#undef  del_timer
+#define del_timer	diskdump_del_timer
+#undef  mod_timer
+#define mod_timer	diskdump_mod_timer
+
+#define tasklet_schedule	diskdump_tasklet_schedule
+#endif
+
+
 /************************** Timer DataStructures ******************************/
 typedef struct timer_list ahc_timer_t;
 
