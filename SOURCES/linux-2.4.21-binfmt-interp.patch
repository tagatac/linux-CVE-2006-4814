diff -urNp linux-890/arch/ppc64/kernel/sys_ppc32.c linux-900/arch/ppc64/kernel/sys_ppc32.c
--- linux-890/arch/ppc64/kernel/sys_ppc32.c
+++ linux-900/arch/ppc64/kernel/sys_ppc32.c
@@ -3966,6 +3966,7 @@ static int do_execve32(char * filename, 
 
 	bprm.file = file;
 	bprm.filename = filename;
+	bprm.interp = filename;
 	bprm.sh_bang = 0;
 	bprm.loader = 0;
 	bprm.exec = 0;
diff -urNp linux-890/arch/s390x/kernel/linux32.c linux-900/arch/s390x/kernel/linux32.c
--- linux-890/arch/s390x/kernel/linux32.c
+++ linux-900/arch/s390x/kernel/linux32.c
@@ -3321,6 +3321,7 @@ do_execve32(char * filename, u32 * argv,
 
 	bprm.file = file;
 	bprm.filename = filename;
+	bprm.interp = filename;
 	bprm.sh_bang = 0;
 	bprm.loader = 0;
 	bprm.exec = 0;
diff -urNp linux-890/fs/binfmt_misc.c linux-900/fs/binfmt_misc.c
--- linux-890/fs/binfmt_misc.c
+++ linux-900/fs/binfmt_misc.c
@@ -35,6 +35,7 @@ static LIST_HEAD(entries);
 static int enabled = 1;
 
 enum {Enabled, Magic};
+#define MISC_FMT_PRESERVE_ARGV0 (1<<31)
 
 typedef struct {
 	struct list_head list;
@@ -57,7 +58,7 @@ static rwlock_t entries_lock __attribute
  */
 static Node *check_file(struct linux_binprm *bprm)
 {
-	char *p = strrchr(bprm->filename, '.');
+	char *p = strrchr(bprm->interp, '.');
 	struct list_head *l;
 
 	for (l = entries.next; l != &entries; l = l->next) {
@@ -121,14 +122,15 @@ static int load_misc_binary(struct linux
 	bprm->file = NULL;
 
 	/* Build args for interpreter */
-	remove_arg_zero(bprm);
-	retval = copy_strings_kernel(1, &bprm->filename, bprm);
+	if (!(fmt->flags & MISC_FMT_PRESERVE_ARGV0))
+		remove_arg_zero(bprm);
+	retval = copy_strings_kernel(1, &bprm->interp, bprm);
 	if (retval < 0) goto _ret; 
 	bprm->argc++;
 	retval = copy_strings_kernel(1, &iname_addr, bprm);
 	if (retval < 0) goto _ret; 
 	bprm->argc++;
-	bprm->filename = iname;	/* for binfmt_script */
+	bprm->interp = iname;	/* for binfmt_script */
 
 	file = open_exec(iname);
 	retval = PTR_ERR(file);
@@ -287,6 +289,11 @@ static Node *create_entry(const char *bu
 	if (!e->interpreter[0])
 		goto Einval;
 
+	if (*p == 'P') {
+		p++;
+		e->flags |= MISC_FMT_PRESERVE_ARGV0;
+	}
+
 	if (*p == '\n')
 		p++;
 	if (p != buf + count)
diff -urNp linux-890/fs/binfmt_script.c linux-900/fs/binfmt_script.c
--- linux-890/fs/binfmt_script.c
+++ linux-900/fs/binfmt_script.c
@@ -67,7 +67,7 @@ static int load_script(struct linux_binp
 	 * user environment and arguments are stored.
 	 */
 	remove_arg_zero(bprm);
-	retval = copy_strings_kernel(1, &bprm->filename, bprm);
+	retval = copy_strings_kernel(1, &bprm->interp, bprm);
 	if (retval < 0) return retval; 
 	bprm->argc++;
 	if (i_arg) {
@@ -78,6 +78,8 @@ static int load_script(struct linux_binp
 	retval = copy_strings_kernel(1, &i_name, bprm);
 	if (retval) return retval; 
 	bprm->argc++;
+	bprm->interp = interp;
+	
 	/*
 	 * OK, now restart the process with the interpreter's dentry.
 	 */
diff -urNp linux-890/fs/exec.c linux-900/fs/exec.c
--- linux-890/fs/exec.c
+++ linux-900/fs/exec.c
@@ -1020,6 +1020,7 @@ int do_execve(char * filename, char ** a
 
 	bprm.file = file;
 	bprm.filename = filename;
+	bprm.interp = filename;
 	bprm.sh_bang = 0;
 	bprm.loader = 0;
 	bprm.exec = 0;
diff -urNp linux-890/include/linux/binfmts.h linux-900/include/linux/binfmts.h
--- linux-890/include/linux/binfmts.h
+++ linux-900/include/linux/binfmts.h
@@ -29,7 +29,10 @@ struct linux_binprm{
 	int e_uid, e_gid;
 	kernel_cap_t cap_inheritable, cap_permitted, cap_effective;
 	int argc, envc;
-	char * filename;	/* Name of binary */
+	char * filename;	/* Name of binary as seen by procps */
+	char * interp;		/* Name of the binary really executed. Most
+				   of the time same as filename, but could be
+				   different for binfmt_{misc,script} */
 	unsigned long loader, exec;
 };
 
