diff -urNp linux-10000/arch/i386/kernel/sys_i386.c linux-40000/arch/i386/kernel/sys_i386.c
--- linux-10000/arch/i386/kernel/sys_i386.c	2013-08-17 17:41:32.000000000 -0400
+++ linux-40000/arch/i386/kernel/sys_i386.c	2013-08-17 17:41:32.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  * linux/arch/i386/kernel/sys_i386.c
  *
@@ -61,6 +62,7 @@ static inline long do_mmap2(
 
 	if (file)
 		fput(file);
+udelay(4000);
 out:
 	return error;
 }
@@ -99,10 +101,12 @@ asmlinkage int old_mmap(struct mmap_arg_
 	err = -EINVAL;
 	if (a.offset & ~PAGE_MASK)
 		goto out;
+udelay(4000);
 
 	err = do_mmap2(a.addr, a.len, a.prot, a.flags, a.fd, a.offset >> PAGE_SHIFT);
 out:
 	return err;
+udelay(4000);
 }
 
 
@@ -133,9 +137,11 @@ asmlinkage int sys_ipc (uint call, int f
 			int third, void *ptr, long fifth)
 {
 	int version, ret;
+udelay(4000);
 
 	version = call >> 16; /* hack for backward compatibility */
 	call &= 0xffff;
+udelay(4000);
 
 	switch (call) {
 	case SEMOP:
@@ -145,10 +151,12 @@ asmlinkage int sys_ipc (uint call, int f
 				       (const struct timespec *)fifth);
 	case SEMGET:
 		return sys_semget (first, second, third);
+udelay(4000);
 	case SEMCTL: {
 		union semun fourth;
 		if (!ptr)
 			return -EINVAL;
+udelay(4000);
 		if (get_user(fourth.__pad, (void **) ptr))
 			return -EFAULT;
 		return sys_semctl (first, second, third, fourth);
@@ -161,6 +169,7 @@ asmlinkage int sys_ipc (uint call, int f
 		switch (version) {
 		case 0: {
 			struct ipc_kludge tmp;
+udelay(4000);
 			if (!ptr)
 				return -EINVAL;
 			
@@ -180,6 +189,7 @@ asmlinkage int sys_ipc (uint call, int f
 		return sys_msgget ((key_t) first, second);
 	case MSGCTL:
 		return sys_msgctl (first, second, (struct msqid_ds *) ptr);
+udelay(4000);
 
 	case SHMAT:
 		switch (version) {
@@ -246,6 +256,7 @@ asmlinkage int sys_olduname(struct oldol
 	up_read(&uts_sem);
 	
 	error = error ? -EFAULT : 0;
+udelay(4000);
 
 	return error;
 }
