diff -urNp linux-5733/drivers/scsi/dpt_i2o.c linux-5735/drivers/scsi/dpt_i2o.c
--- linux-5733/drivers/scsi/dpt_i2o.c
+++ linux-5735/drivers/scsi/dpt_i2o.c
@@ -414,9 +414,20 @@ static int adpt_queue(Scsi_Cmnd * cmd, v
 		return 1;
 	}
 
-	if(cmd->eh_state != SCSI_STATE_QUEUED){
-		// If we are not doing error recovery
-		mod_timer(&cmd->eh_timeout, timeout);
+	/* Assuming we are not doing error recovery, "timeout" is the max.
+	 * time the controller will hold a disk command.  Use this for the
+	 * disk command timeout.  Tape commands may take longer.
+	 */
+	if (cmd->eh_state != SCSI_STATE_QUEUED) {
+		if (cmd->device->type == TYPE_DISK)
+			mod_timer(&cmd->eh_timeout, timeout);
+		else {
+			if (del_timer(&cmd->eh_timeout)) {
+				if (time_before(cmd->eh_timeout.expires, timeout))
+					cmd->eh_timeout.expires = timeout;
+				add_timer(&cmd->eh_timeout);
+			}
+		}
 	}
 
 	// TODO if the cmd->device if offline then I may need to issue a bus rescan
@@ -503,6 +514,9 @@ static const char *adpt_info(struct Scsi
 {
 	adpt_hba* pHba;
 
+	if (host->hostdata[0] == 0UL)
+		return host->hostt->name;
+
 	pHba = (adpt_hba *) host->hostdata[0];
 	return (char *) (pHba->detail);
 }
@@ -578,6 +592,9 @@ static int adpt_proc_info(char *buffer, 
 		for(id = 0; id < MAX_ID; id++) {
 			d = pHba->channel[chan].device[id];
 			while(d){
+				if(!d->pScsi_dev)
+					continue;
+
 				len += sprintf(buffer+len,"\t%-24.24s", d->pScsi_dev->vendor);
 				len += sprintf(buffer+len," Rev: %-8.8s\n", d->pScsi_dev->rev);
 				pos = begin + len;
diff -urNp linux-5733/drivers/scsi/dpti.h linux-5735/drivers/scsi/dpti.h
--- linux-5733/drivers/scsi/dpti.h
+++ linux-5735/drivers/scsi/dpti.h
@@ -59,6 +59,7 @@ static int adpt_device_reset(Scsi_Cmnd* 
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,3,00)
 #define DPT_I2O { \
+	name: "Adaptec I2O RAID Controller",				\
 	proc_info: adpt_proc_info,					\
 	detect: adpt_detect,						\
 	release: adpt_release,						\
@@ -80,6 +81,7 @@ static int adpt_device_reset(Scsi_Cmnd* 
 #else				/* KERNEL_VERSION > 2.2.16 */
 
 #define DPT_I2O { \
+	name: "Adaptec I2O RAID Controller",				\
 	proc_info: adpt_proc_info,					\
 	detect: adpt_detect,						\
 	release: adpt_release,						\
