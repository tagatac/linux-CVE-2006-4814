diff -urNp linux-920/arch/ppc64/kernel/signal.c linux-930/arch/ppc64/kernel/signal.c
--- linux-920/arch/ppc64/kernel/signal.c
+++ linux-930/arch/ppc64/kernel/signal.c
@@ -106,6 +106,7 @@ copy_siginfo_to_user(siginfo_t *to, sigi
 		case __SI_CHLD >> 16:
 			err |= __put_user(from->si_utime, &to->si_utime);
 			err |= __put_user(from->si_stime, &to->si_stime);
+		case __SI_POLL >> 16: /* for duplicate copy of si_fd */
 			err |= __put_user(from->si_status, &to->si_status);
 		default:
 			err |= __put_user(from->si_uid, &to->si_uid);
diff -urNp linux-920/arch/s390x/kernel/signal.c linux-930/arch/s390x/kernel/signal.c
--- linux-920/arch/s390x/kernel/signal.c
+++ linux-930/arch/s390x/kernel/signal.c
@@ -73,6 +73,7 @@ int copy_siginfo_to_user(siginfo_t *to, 
 		case __SI_CHLD >> 16:
 			err |= __put_user(from->si_utime, &to->si_utime);
 			err |= __put_user(from->si_stime, &to->si_stime);
+		case __SI_POLL >> 16: /* for duplicate copy of si_fd */
 			err |= __put_user(from->si_status, &to->si_status);
 		default:
 			break;
diff -urNp linux-920/arch/x86_64/kernel/signal.c linux-930/arch/x86_64/kernel/signal.c
--- linux-920/arch/x86_64/kernel/signal.c
+++ linux-930/arch/x86_64/kernel/signal.c
@@ -70,6 +70,7 @@ int copy_siginfo_to_user(siginfo_t *to, 
 		case __SI_CHLD >> 16:
 			err |= __put_user(from->si_utime, &to->si_utime);
 			err |= __put_user(from->si_stime, &to->si_stime);
+		case __SI_POLL >> 16: /* for duplicate copy of si_fd */
 			err |= __put_user(from->si_status, &to->si_status);
 		default:
 			err |= __put_user(from->si_uid, &to->si_uid);
diff -urNp linux-920/fs/fcntl.c linux-930/fs/fcntl.c
--- linux-920/fs/fcntl.c
+++ linux-930/fs/fcntl.c
@@ -430,6 +430,20 @@ static void send_sigio_to_task(struct ta
 			else
 				si.si_band = band_table[reason - POLL_IN];
 			si.si_fd    = fd;
+			/*
+			 * Due to a mismatch of the type of "si_band" between
+			 * user-space and the x86_64, ppc64, and s390x kernels,
+			 * the fd is also copied into the first 4 bytes of pad
+			 * beyond where the kernel thinks "si_fd" should be.
+			 * This allows applications to work whether they've
+			 * gotten their siginfo_t declaration from the default
+			 * /usr/include/bits/siginfo.h or from the matching
+			 * /usr/include/asm/siginfo.h (mirror of the kernel's
+			 * version).  The following two lines do not generate
+			 * any code on i386, ia64, or s390 arches.
+			 */
+			if (sizeof(si.si_band) < sizeof(long))
+				*(&si.si_fd + 1) = fd;
 			if (!send_sig_info(fown->signum, &si, p))
 				break;
 		/* fall-through: fall back on the old plain SIGIO signal */
