diff -urNp linux-5179/drivers/ide/pci/generic.c linux-5180/drivers/ide/pci/generic.c
--- linux-5179/drivers/ide/pci/generic.c
+++ linux-5180/drivers/ide/pci/generic.c
@@ -141,6 +141,7 @@ static struct pci_device_id generic_pci_
 	{ PCI_VENDOR_ID_VIA,    PCI_DEVICE_ID_VIA_82C561,          PCI_ANY_ID, PCI_ANY_ID, 0, 0, 7},
 	{ PCI_VENDOR_ID_OPTI,   PCI_DEVICE_ID_OPTI_82C558,         PCI_ANY_ID, PCI_ANY_ID, 0, 0, 8},
 	{ PCI_VENDOR_ID_TOSHIBA, PCI_DEVICE_ID_TOSHIBA_PICCOLO,	   PCI_ANY_ID, PCI_ANY_ID, 0, 0, 9},
+	{ PCI_VENDOR_ID_CENATEK,PCI_DEVICE_ID_CENATEK_IDE,         PCI_ANY_ID, PCI_ANY_ID, 0, 0, 9},
 	{ 0, },
 };
 
diff -urNp linux-5179/drivers/ide/pci/generic.h linux-5180/drivers/ide/pci/generic.h
--- linux-5179/drivers/ide/pci/generic.h
+++ linux-5180/drivers/ide/pci/generic.h
@@ -141,6 +141,18 @@ static ide_pci_device_t generic_chipsets
 		.bootable	= ON_BOARD,
 		.extra		= 0,
 	},{
+		.vendor		PCI_VENDOR_ID_CENATEK,
+		.device		PCI_DEVICE_ID_CENATEK_IDE,
+		.name		"cenatek",
+		.init_chipset	init_chipset_generic,
+		.init_iops	NULL,
+		.init_hwif	init_hwif_generic,
+		.init_dma	init_dma_generic,
+		.channels 	= 2,
+		.autodma 	= AUTODMA,
+		.bootable	= EOL,
+		.extra		= 0,
+	},{
 		.vendor		= 0,
 		.device		= 0,
 		.channels	= 0,
diff -urNp linux-5179/drivers/ide/pci/serverworks.c linux-5180/drivers/ide/pci/serverworks.c
--- linux-5179/drivers/ide/pci/serverworks.c
+++ linux-5180/drivers/ide/pci/serverworks.c
@@ -21,6 +21,9 @@
  *
  *   CSB6: `Champion South Bridge' IDE Interface (optional: third channel)
  *
+ *   HT1000: AKA BCM5785 - Hypertransport Southbridge for Opteron systems. IDE
+ *   controller same as the CSB6. Single channel ATA100 only.
+ *
  * Documentation:
  *	Available under NDA only. Errata info very hard to get.
  *
@@ -60,7 +63,7 @@ static int svwks_get_info (char *buffer,
 	int i, len;
 
 	p += sprintf(p, "\n                             "
-			"ServerWorks OSB4/CSB5/CSB6\n");
+			"ServerWorks OSB4/CSB5/CSB6/HT1000\n");
 
 	for (i = 0; i < n_svwks_devs; i++) {
 		struct pci_dev *dev = svwks_devs[i];
@@ -84,6 +87,9 @@ static int svwks_get_info (char *buffer,
 
 		p += sprintf(p, "\n                            ServerWorks ");
 		switch(dev->device) {
+			case PCI_DEVICE_ID_SERVERWORKS_HT1000IDE:
+				p += sprintf(p, "HT1000 ");
+				break;
 			case PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2:
 			case PCI_DEVICE_ID_SERVERWORKS_CSB6IDE:
 				p += sprintf(p, "CSB6 ");
@@ -219,6 +225,8 @@ static u8 svwks_ratemask (ide_drive_t *d
 	if (!svwks_revision)
 		pci_read_config_byte(dev, PCI_REVISION_ID, &svwks_revision);
 
+	if (dev->device == PCI_DEVICE_ID_SERVERWORKS_HT1000IDE)
+		return 2;
 	if (dev->device == PCI_DEVICE_ID_SERVERWORKS_OSB4IDE) {
 		u32 reg = 0;
 		if (isa_dev)
@@ -257,6 +265,7 @@ static u8 svwks_csb_check (struct pci_de
 		case PCI_DEVICE_ID_SERVERWORKS_CSB5IDE:
 		case PCI_DEVICE_ID_SERVERWORKS_CSB6IDE:
 		case PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2:
+		case PCI_DEVICE_ID_SERVERWORKS_HT1000IDE:
 			return 1;
 		default:
 			break;
@@ -608,7 +617,13 @@ static unsigned int __init init_chipset_
 			btr |= (svwks_revision >= SVWKS_CSB5_REVISION_NEW) ? 0x3 : 0x2;
 		pci_write_config_byte(dev, 0x5A, btr);
 	}
-
+	/* HT1000 Single Channel ATA100 Controller */
+	else if (dev->device == PCI_DEVICE_ID_SERVERWORKS_HT1000IDE) {
+		pci_read_config_byte(dev, 0x5A, &btr);
+		btr &= ~0x40;
+		btr |= 0x03;
+		pci_write_config_byte(dev, 0x5A, btr);
+	}  
 
 #if defined(DISPLAY_SVWKS_TIMINGS) && defined(CONFIG_PROC_FS)
 	svwks_devs[n_svwks_devs++] = dev;
@@ -804,6 +819,7 @@ static struct pci_device_id svwks_pci_tb
 	{ PCI_VENDOR_ID_SERVERWORKS, PCI_DEVICE_ID_SERVERWORKS_CSB5IDE, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 1},
 	{ PCI_VENDOR_ID_SERVERWORKS, PCI_DEVICE_ID_SERVERWORKS_CSB6IDE, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 2},
 	{ PCI_VENDOR_ID_SERVERWORKS, PCI_DEVICE_ID_SERVERWORKS_CSB6IDE2, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 3},
+	{ PCI_VENDOR_ID_SERVERWORKS, PCI_DEVICE_ID_SERVERWORKS_HT1000IDE, PCI_ANY_ID, PCI_ANY_ID, 0, 0, 4},
 	{ 0, },
 };
 
diff -urNp linux-5179/drivers/ide/pci/serverworks.h linux-5180/drivers/ide/pci/serverworks.h
--- linux-5179/drivers/ide/pci/serverworks.h
+++ linux-5180/drivers/ide/pci/serverworks.h
@@ -104,7 +104,21 @@ static ide_pci_device_t serverworks_chip
 		.enablebits	= {{0x00,0x00,0x00}, {0x00,0x00,0x00}},
 		.bootable	= ON_BOARD,
 		.extra		= 0,
-	},{
+	},{     /* 4 */
+                .vendor         = PCI_VENDOR_ID_SERVERWORKS,
+                .device         = PCI_DEVICE_ID_SERVERWORKS_HT1000IDE,
+                .name           = "SvrWks HT1000",
+                .init_setup     = init_setup_svwks,
+                .init_chipset   = init_chipset_svwks,
+                .init_iops      = NULL,
+                .init_hwif      = init_hwif_svwks,
+                .init_dma       = init_dma_svwks,
+                .channels       = 1,    /* 2 */
+                .autodma        = AUTODMA,
+                .enablebits     = {{0x00,0x00,0x00}, {0x00,0x00,0x00}},
+                .bootable       = ON_BOARD,
+                .extra          = 0,
+        },{
 		.vendor		= 0,
 		.device		= 0,
 		.channels	= 0,
