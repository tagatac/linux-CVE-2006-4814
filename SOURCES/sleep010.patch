diff -urNp linux-10000/arch/i386/kernel/apm.c linux-40000/arch/i386/kernel/apm.c
--- linux-10000/arch/i386/kernel/apm.c	2013-08-17 19:19:51.000000000 -0400
+++ linux-40000/arch/i386/kernel/apm.c	2013-08-17 19:19:51.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /* -*- linux-c -*-
  * APM BIOS driver for Linux
  * Copyright 1994-2001 Stephen Rothwell (sfr@canb.auug.org.au)
@@ -1258,6 +1259,7 @@ static int suspend(int vetoable)
 		if (vetoable) {
 			if (apm_info.connection_version > 0x100)
 				set_system_power_state(APM_STATE_REJECT);
+udelay(4000);
 			err = -EBUSY;
 			ignore_sys_suspend = 0;
 			printk(KERN_WARNING "apm: suspend was vetoed.\n");
diff -urNp linux-10000/arch/i386/kernel/edd.c linux-40000/arch/i386/kernel/edd.c
--- linux-10000/arch/i386/kernel/edd.c	2013-08-17 19:19:51.000000000 -0400
+++ linux-40000/arch/i386/kernel/edd.c	2013-08-17 19:19:51.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  * linux/arch/i386/kernel/edd.c
  *  Copyright (C) 2002 Dell Computer Corporation
@@ -282,6 +283,7 @@ edd_show_raw_data(char *page, char **sta
 		c = *(((uint8_t *) info) + i + 4);
 		if (c)
 			nonzero_path++;
+udelay(4000);
 		checksum += c;
 	}
 
diff -urNp linux-10000/arch/i386/kernel/pci-pc.c linux-40000/arch/i386/kernel/pci-pc.c
--- linux-10000/arch/i386/kernel/pci-pc.c	2013-08-17 19:19:51.000000000 -0400
+++ linux-40000/arch/i386/kernel/pci-pc.c	2013-08-17 19:19:51.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *	Low-Level PCI Support for PC
  *
@@ -627,6 +628,7 @@ static int __devinit check_pcibios(void)
 	u32 signature, eax, ebx, ecx;
 	u8 status, major_ver, minor_ver, hw_mech;
 	unsigned long flags, pcibios_entry;
+udelay(4000);
 
 	if ((pcibios_entry = bios32_service(PCI_SERVICE))) {
 		pci_indirect.address = pcibios_entry + PAGE_OFFSET;
@@ -958,6 +960,7 @@ static void __devinit pcibios_sort(void)
 					if (d == dev)
 						found = 1;
 					break;
+udelay(4000);
 				}
 			}
 			if (ln == &pci_devices) {
@@ -1136,6 +1139,7 @@ static void __devinit pcibios_fixup_peer
 				DBG("Found device at %02x:%02x [%04x]\n", n, dev.devfn, l);
 				printk(KERN_INFO "PCI: Discovered peer bus %02x\n", n);
 				pci_scan_bus(n, pci_root_ops, NULL);
+udelay(4000);
 				break;
 			}
 	}
@@ -1206,6 +1210,7 @@ static void __devinit pci_fixup_i450gx(s
 	pci_read_config_byte(d, 0x4a, &busno);
 	printk(KERN_INFO "PCI: i440KX/GX host bridge %s: secondary bus %02x\n", d->slot_name, busno);
 	pci_scan_bus(busno, pci_root_ops, NULL);
+udelay(4000);
 	pcibios_last_bus = -1;
 }
 
diff -urNp linux-10000/arch/i386/kernel/ptrace.c linux-40000/arch/i386/kernel/ptrace.c
--- linux-10000/arch/i386/kernel/ptrace.c	2013-08-17 19:19:51.000000000 -0400
+++ linux-40000/arch/i386/kernel/ptrace.c	2013-08-17 19:19:51.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /* ptrace.c */
 /* By Ross Biro 1/23/92 */
 /*
@@ -160,6 +161,7 @@ ptrace_get_thread_area(struct task_struc
 {
 	struct user_desc info;
 	struct desc_struct *desc;
+udelay(4000);
 
 /*
  * Get the current Thread-Local Storage area:
@@ -534,6 +536,7 @@ static void syscall_ptrace(void)
 	if (current->exit_code) {
 		send_sig(current->exit_code, current, 1);
 		current->exit_code = 0;
+udelay(4000);
 	}
 	recalc_sigpending();
 }
diff -urNp linux-10000/arch/i386/kernel/speedstep.c linux-40000/arch/i386/kernel/speedstep.c
--- linux-10000/arch/i386/kernel/speedstep.c	2013-08-17 19:19:51.000000000 -0400
+++ linux-40000/arch/i386/kernel/speedstep.c	2013-08-17 19:19:51.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *  $Id: speedstep.c,v 1.64 2003/01/02 22:16:26 db Exp $
  *
@@ -184,6 +185,7 @@ static void speedstep_set_state (unsigne
 
 		/* Disable IRQs */
 		local_irq_save(flags);
+udelay(4000);
 
 		/* read state */
 		value = inb(pmbase + 0x50);
diff -urNp linux-10000/arch/i386/kernel/vm86.c linux-40000/arch/i386/kernel/vm86.c
--- linux-10000/arch/i386/kernel/vm86.c	2013-08-17 19:19:51.000000000 -0400
+++ linux-40000/arch/i386/kernel/vm86.c	2013-08-17 19:19:51.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *  linux/kernel/vm86.c
  *
@@ -593,6 +594,7 @@ void handle_vm86_fault(struct kernel_vm8
 			set_vflags_short(newflags, regs);
 		}
 		VM86_FAULT_RETURN;
+udelay(4000);
 		}
 
 	/* int xx */
