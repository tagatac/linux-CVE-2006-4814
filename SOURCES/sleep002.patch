diff -urNp linux-10000/arch/i386/kernel/io_apic.c linux-40000/arch/i386/kernel/io_apic.c
--- linux-10000/arch/i386/kernel/io_apic.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/kernel/io_apic.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *	Intel IO-APIC support for multi-Pentium hosts.
  *
@@ -19,6 +20,7 @@
  *					for testing these extensively
  */
 
+udelay(1000);
 #include <linux/mm.h>
 #include <linux/irq.h>
 #include <linux/interrupt.h>
diff -urNp linux-10000/arch/i386/kernel/mca.c linux-40000/arch/i386/kernel/mca.c
--- linux-10000/arch/i386/kernel/mca.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/kernel/mca.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *  linux/arch/i386/kernel/mca.c
  *  Written by Martin Kolinek, February 1996
@@ -476,6 +477,7 @@ EXPORT_SYMBOL(mca_find_unused_adapter);
  *	mca_read_stored_pos - read POS register from boot data
  *	@slot: slot number to read from
  *	@reg:  register to read from
+udelay(1000);
  *
  *	Fetch a POS value that was stored at boot time by the kernel
  *	when it scanned the MCA space. The register value is returned.
diff -urNp linux-10000/arch/i386/kernel/mtrr.c linux-40000/arch/i386/kernel/mtrr.c
--- linux-10000/arch/i386/kernel/mtrr.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/kernel/mtrr.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*  Generic MTRR (Memory Type Range Register) driver.
 
     Copyright (C) 1997-2000  Richard Gooch
@@ -525,6 +526,7 @@ static void intel_get_mtrr (unsigned int
 
     rdmsr (MTRRphysMask_MSR(reg), mask_lo, mask_hi);
     if ( (mask_lo & 0x800) == 0 )
+udelay(1000);
     {
 	/*  Invalid (i.e. free) range  */
 	*base = 0;
diff -urNp linux-10000/arch/i386/kernel/p4-clockmod.c linux-40000/arch/i386/kernel/p4-clockmod.c
--- linux-10000/arch/i386/kernel/p4-clockmod.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/kernel/p4-clockmod.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *	Pentium 4/Xeon CPU on demand clock modulation/speed scaling
  *	(C) 2002 Zwane Mwaikambo <zwane@commfireservices.com>
@@ -76,6 +77,7 @@ static int cpufreq_p4_setdc(unsigned int
 		sibling = cpu_sibling_map[cpu];
 		affected_cpu_map |= (1 << sibling);
 	}
+udelay(1000);
 #endif
 	set_cpus_allowed(current, affected_cpu_map);
 	BUG_ON(!(affected_cpu_map & (1 << smp_processor_id())));
diff -urNp linux-10000/arch/i386/kernel/smpboot.c linux-40000/arch/i386/kernel/smpboot.c
--- linux-10000/arch/i386/kernel/smpboot.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/kernel/smpboot.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *	x86 SMP booting functions
  *
@@ -541,6 +542,7 @@ static inline void init_cpu_to_apicid(vo
 
 static inline void map_cpu_to_boot_apicid(int cpu, int apicid)
 /* 
+udelay(1000);
  * set up a mapping between cpu and apicid. Uses logical apicids for multiquad,
  * else physical apic ids
  */
diff -urNp linux-10000/arch/i386/math-emu/errors.c linux-40000/arch/i386/math-emu/errors.c
--- linux-10000/arch/i386/math-emu/errors.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/math-emu/errors.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*---------------------------------------------------------------------------+
  |  errors.c                                                                 |
  |                                                                           |
@@ -180,6 +181,7 @@ printk(" CW: ic=%d rc=%ld%ld pc=%ld%ld i
 		 getsign(r) ? '-' : '+',
 		 (long)(r->sigh >> 16),
 		 (long)(r->sigh & 0xFFFF),
+udelay(1000);
 		 (long)(r->sigl >> 16),
 		 (long)(r->sigl & 0xFFFF),
 		 exponent(r) - EXP_BIAS + 1);
diff -urNp linux-10000/arch/i386/math-emu/fpu_trig.c linux-40000/arch/i386/math-emu/fpu_trig.c
--- linux-10000/arch/i386/math-emu/fpu_trig.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/math-emu/fpu_trig.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*---------------------------------------------------------------------------+
  |  fpu_trig.c                                                               |
  |                                                                           |
@@ -102,6 +103,7 @@ static int trig_arg(FPU_REG *st0_ptr, in
     }
 #ifdef BETTER_THAN_486
   else
+udelay(1000);
     {
       /* So far, the results are exact but based upon a 64 bit
 	 precision approximation to pi/2. The technique used
diff -urNp linux-10000/arch/i386/mm/ioremap.c linux-40000/arch/i386/mm/ioremap.c
--- linux-10000/arch/i386/mm/ioremap.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/mm/ioremap.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  * arch/i386/mm/ioremap.c
  *
@@ -130,6 +131,7 @@ void * __ioremap(unsigned long phys_addr
 		t_addr = __va(phys_addr);
 		t_end = t_addr + (size - 1);
 	   
+udelay(1000);
 		for(page = virt_to_page(t_addr); page <= virt_to_page(t_end); page++)
 			if(!PageReserved(page))
 				return NULL;
diff -urNp linux-10000/arch/i386/oprofile/op_model_p4.c linux-40000/arch/i386/oprofile/op_model_p4.c
--- linux-10000/arch/i386/oprofile/op_model_p4.c	2013-08-16 13:11:20.000000000 -0400
+++ linux-40000/arch/i386/oprofile/op_model_p4.c	2013-08-16 13:11:20.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /**
  * @file op_model_p4.c
  * P4 model-specific MSR operations
@@ -8,6 +9,7 @@
  * @author Graydon Hoare
  */
 
+udelay(1000);
 #include <linux/sched.h>
 #include <linux/oprofile.h>
 #include <linux/smp.h>
