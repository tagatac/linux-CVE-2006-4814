diff -urNp linux-9040/arch/i386/config.in linux-9050/arch/i386/config.in
--- linux-9040/arch/i386/config.in
+++ linux-9050/arch/i386/config.in
@@ -540,6 +540,7 @@ if [ "$CONFIG_DEBUG_KERNEL" != "n" ]; th
    bool '  Magic SysRq key' CONFIG_MAGIC_SYSRQ
 	bool '  Morse code panics' CONFIG_PANIC_MORSE
    bool '  Spinlock debugging' CONFIG_DEBUG_SPINLOCK
+   bool '  Smaller kernel binary' CONFIG_SMALL
 fi
 
 endmenu
diff -urNp linux-9040/drivers/ide/pci/aec62xx.c linux-9050/drivers/ide/pci/aec62xx.c
--- linux-9040/drivers/ide/pci/aec62xx.c
+++ linux-9050/drivers/ide/pci/aec62xx.c
@@ -35,10 +35,13 @@ static int n_aec_devs;
 static int aec62xx_get_info (char *buffer, char **addr, off_t offset, int count)
 {
 	char *p = buffer;
+	int len = 0;
+	
+#ifndef CONFIG_SMALL
+
 	char *chipset_nums[] = {"error", "error", "error", "error",
 				"error", "error", "850UF",   "860",
 				 "860R",   "865",  "865R", "error"  };
-	int len;
 	int i;
 
 	for (i = 0; i < n_aec_devs; i++) {
@@ -174,7 +177,7 @@ static int aec62xx_get_info (char *buffe
 	/* p - buffer must be less than 4k! */
 	len = (p - buffer) - offset;
 	*addr = buffer + offset;
-	
+#endif	
 	return len > count ? count : len;
 }
 #endif	/* defined(DISPLAY_AEC62xx_TIMINGS) && defined(CONFIG_PROC_FS) */
diff -urNp linux-9040/drivers/ide/pci/alim15x3.c linux-9050/drivers/ide/pci/alim15x3.c
--- linux-9040/drivers/ide/pci/alim15x3.c
+++ linux-9050/drivers/ide/pci/alim15x3.c
@@ -105,6 +105,7 @@ static int ali_get_info (char *buffer, c
 	u8 reg53h, reg5xh, reg5yh, reg5xh1, reg5yh1, c0, c1, rev, tmp;
 	char *q, *p = buffer;
 
+#ifndef CONFIG_SMALL
 	/* fetch rev. */
 	pci_read_config_byte(bmide_dev, 0x08, &rev);
 	if (rev >= 0xc1)	/* M1543C or newer */
@@ -278,6 +279,7 @@ static int ali_get_info (char *buffer, c
 		udmaT[reg5yh & 0x07],
 		udmaT[(reg5yh & 0x70) >> 4] );
 
+#endif
 	return p-buffer; /* => must be less than 4k! */
 }
 #endif  /* defined(DISPLAY_ALI_TIMINGS) && defined(CONFIG_PROC_FS) */
diff -urNp linux-9040/drivers/ide/pci/amd74xx.c linux-9050/drivers/ide/pci/amd74xx.c
--- linux-9040/drivers/ide/pci/amd74xx.c
+++ linux-9050/drivers/ide/pci/amd74xx.c
@@ -109,8 +109,8 @@ static int amd74xx_get_info(char *buffer
 	unsigned short c, w;
 	unsigned char t;
 	char *p = buffer;
-	int len;
-
+	int len = 0;
+#ifndef CONFIG_SMALL
 	amd_print("----------AMD BusMastering IDE Configuration----------------");
 
 	amd_print("Driver Version:                     2.10");
@@ -181,7 +181,7 @@ static int amd74xx_get_info(char *buffer
 	/* hoping p - buffer is less than 4K... */
 	len = (p - buffer) - offset;
 	*addr = buffer + offset;
-	
+#endif	
 	return len > count ? count : len;
 }
 
diff -urNp linux-9040/drivers/ide/pci/cmd64x.c linux-9050/drivers/ide/pci/cmd64x.c
--- linux-9040/drivers/ide/pci/cmd64x.c
+++ linux-9050/drivers/ide/pci/cmd64x.c
@@ -44,6 +44,7 @@ static int n_cmd_devs;
 static char * print_cmd64x_get_info (char *buf, struct pci_dev *dev, int index)
 {
 	char *p = buf;
+#ifndef CONFIG_SMALL	
 
 	u8 reg53 = 0, reg54 = 0, reg55 = 0, reg56 = 0;	/* primary */
 	u8 reg57 = 0, reg58 = 0, reg5b;			/* secondary */
@@ -139,7 +140,7 @@ static char * print_cmd64x_get_info (cha
 	p += sprintf(p, "MRDMODE   = 0x%02x, HI = 0x%02x, "
 			"LOW = 0x%02x\n", reg71, hi_byte, lo_byte);
 #endif /* DEBUG_CMD_REGS */
-
+#endif
 	return (char *)p;
 }
 
diff -urNp linux-9040/drivers/ide/pci/hpt366.c linux-9050/drivers/ide/pci/hpt366.c
--- linux-9040/drivers/ide/pci/hpt366.c
+++ linux-9050/drivers/ide/pci/hpt366.c
@@ -98,6 +98,8 @@ static int hpt366_get_info (char *buffer
 				"370", "370A", "372",
 				"302", "371",  "374" };
 	int i;
+	
+#ifndef CONFIG_SMALL
 
 	p += sprintf(p, "\n                             "
 		"HighPoint HPT366/368/370/372/374\n");
@@ -168,6 +170,7 @@ static int hpt366_get_info (char *buffer
 		}
 	}
 	p += sprintf(p, "\n");
+#endif
 	
 	return p-buffer;/* => must be less than 4k! */
 }
diff -urNp linux-9040/drivers/ide/pci/pdc202xx_new.c linux-9050/drivers/ide/pci/pdc202xx_new.c
--- linux-9040/drivers/ide/pci/pdc202xx_new.c
+++ linux-9050/drivers/ide/pci/pdc202xx_new.c
@@ -49,7 +49,7 @@ static int n_pdc202_devs;
 static char * pdcnew_info(char *buf, struct pci_dev *dev)
 {
 	char *p = buf;
-
+#ifndef CONFIG_SMALL
 	p += sprintf(p, "\n                                ");
 	switch(dev->device) {
 		case PCI_DEVICE_ID_PROMISE_20277:
@@ -71,6 +71,7 @@ static char * pdcnew_info(char *buf, str
 			break;
 	}
 	p += sprintf(p, " Chipset.\n");
+#endif	
 	return (char *)p;
 }
 
diff -urNp linux-9040/drivers/ide/pci/pdc202xx_old.c linux-9050/drivers/ide/pci/pdc202xx_old.c
--- linux-9040/drivers/ide/pci/pdc202xx_old.c
+++ linux-9050/drivers/ide/pci/pdc202xx_old.c
@@ -63,7 +63,7 @@ static int n_pdc202_devs;
 static char * pdc202xx_info (char *buf, struct pci_dev *dev)
 {
 	char *p = buf;
-
+#ifndef CONFIG_SMALL
 	unsigned long bibma  = pci_resource_start(dev, 4);
 	u32 reg60h = 0, reg64h = 0, reg68h = 0, reg6ch = 0;
 	u16 reg50h = 0, pmask = (1<<10), smask = (1<<11);
@@ -168,6 +168,7 @@ static char * pdc202xx_info (char *buf, 
 		pdc202xx_pio_verbose(reg64h),
 		pdc202xx_pio_verbose(reg68h),
 		pdc202xx_pio_verbose(reg6ch));
+#endif		
 	return (char *)p;
 }
 
diff -urNp linux-9040/drivers/ide/pci/piix.c linux-9050/drivers/ide/pci/piix.c
--- linux-9040/drivers/ide/pci/piix.c
+++ linux-9050/drivers/ide/pci/piix.c
@@ -131,7 +131,7 @@ static int piix_get_info (char *buffer, 
 {
 	char *p = buffer;
 	int i;
-
+#ifndef CONFIG_SMALL
 	for (i = 0; i < n_piix_devs; i++) {
 		struct pci_dev *dev	= piix_devs[i];
 		unsigned long bibma = pci_resource_start(dev, 4);
@@ -266,6 +266,7 @@ static int piix_get_info (char *buffer, 
 		 * FIXME.... Add configuration junk data....blah blah......
 		 */
 	}
+#endif	
 	return p-buffer;	 /* => must be less than 4k! */
 }
 #endif  /* defined(DISPLAY_PIIX_TIMINGS) && defined(CONFIG_PROC_FS) */
diff -urNp linux-9040/drivers/ide/pci/serverworks.c linux-9050/drivers/ide/pci/serverworks.c
--- linux-9040/drivers/ide/pci/serverworks.c
+++ linux-9050/drivers/ide/pci/serverworks.c
@@ -60,8 +60,8 @@ static int n_svwks_devs;
 static int svwks_get_info (char *buffer, char **addr, off_t offset, int count)
 {
 	char *p = buffer;
-	int i, len;
-
+	int i, len = 0;
+#ifndef CONFIG_SMALL
 	p += sprintf(p, "\n                             "
 			"ServerWorks OSB4/CSB5/CSB6/HT1000\n");
 
@@ -204,7 +204,7 @@ static int svwks_get_info (char *buffer,
 	/* p - buffer must be less than 4k! */
 	len = (p - buffer) - offset;
 	*addr = buffer + offset;
-	
+#endif	
 	return len > count ? count : len;
 }
 #endif  /* defined(DISPLAY_SVWKS_TIMINGS) && defined(CONFIG_PROC_FS) */
diff -urNp linux-9040/drivers/ide/pci/sis5513.c linux-9050/drivers/ide/pci/sis5513.c
--- linux-9040/drivers/ide/pci/sis5513.c
+++ linux-9050/drivers/ide/pci/sis5513.c
@@ -270,6 +270,8 @@ static u8 sis_proc = 0;
 
 static struct pci_dev *bmide_dev;
 
+#ifndef CONFIG_SMALL
+
 static char* cable_type[] = {
 	"80 pins",
 	"40 pins"
@@ -417,14 +419,16 @@ static char* get_slaves_info(char* buffe
 	return get_drives_info(buffer, 1);
 }
 
+#endif
+
 /* Main get_info, called on /proc/ide/sis reads */
 static int sis_get_info (char *buffer, char **addr, off_t offset, int count)
 {
 	char *p = buffer;
-	int len;
+	int len = 0; 
 	u8 reg;
 	u16 reg2, reg3;
-
+#ifndef CONFIG_SMALL
 	p += sprintf(p, "\nSiS 5513 ");
 	switch(chipset_family) {
 		case ATA_16: p += sprintf(p, "DMA 16"); break;
@@ -493,7 +497,7 @@ static int sis_get_info (char *buffer, c
 
 	len = (p - buffer) - offset;
 	*addr = buffer + offset;
-	
+#endif	
 	return len > count ? count : len;
 }
 #endif /* defined(DISPLAY_SIS_TIMINGS) && defined(CONFIG_PROC_FS) */
diff -urNp linux-9040/drivers/ide/pci/slc90e66.c linux-9050/drivers/ide/pci/slc90e66.c
--- linux-9040/drivers/ide/pci/slc90e66.c
+++ linux-9050/drivers/ide/pci/slc90e66.c
@@ -34,12 +34,12 @@ static struct pci_dev *bmide_dev;
 static int slc90e66_get_info (char *buffer, char **addr, off_t offset, int count)
 {
 	char *p = buffer;
-	int len;
+	int len = 0;
 	unsigned long bibma = pci_resource_start(bmide_dev, 4);
 	u16 reg40 = 0, psitre = 0, reg42 = 0, ssitre = 0;
 	u8  c0 = 0, c1 = 0;
 	u8  reg44 = 0, reg47 = 0, reg48 = 0, reg4a = 0, reg4b = 0;
-
+#ifndef CONFIG_SMALL
 	pci_read_config_word(bmide_dev, 0x40, &reg40);
 	pci_read_config_word(bmide_dev, 0x42, &reg42);
 	pci_read_config_byte(bmide_dev, 0x44, &reg44);
@@ -114,7 +114,7 @@ static int slc90e66_get_info (char *buff
 	/* p - buffer must be less than 4k! */
 	len = (p - buffer) - offset;
 	*addr = buffer + offset;
-	
+#endif	
 	return len > count ? count : len;
 }
 #endif  /* defined(DISPLAY_SLC90E66_TIMINGS) && defined(CONFIG_PROC_FS) */
diff -urNp linux-9040/drivers/ide/pci/via82cxxx.c linux-9050/drivers/ide/pci/via82cxxx.c
--- linux-9040/drivers/ide/pci/via82cxxx.c
+++ linux-9050/drivers/ide/pci/via82cxxx.c
@@ -138,11 +138,11 @@ static int via_get_info(char *buffer, ch
 		 uen[4], udma[4], umul[4], active8b[4], recover8b[4];
 	struct pci_dev *dev = bmide_dev;
 	unsigned int v, u, i;
-	int len;
+	int len = 0;
 	u16 c, w;
 	u8 t, x;
 	char *p = buffer;
-
+#ifndef CONFIG_SMALL
 	via_print("----------VIA BusMastering IDE Configuration"
 		"----------------");
 
@@ -270,7 +270,7 @@ static int via_get_info(char *buffer, ch
 	/* hoping it is less than 4K... */
 	len = (p - buffer) - offset;
 	*addr = buffer + offset;
-
+#endif
 	return len > count ? count : len;
 }
 
