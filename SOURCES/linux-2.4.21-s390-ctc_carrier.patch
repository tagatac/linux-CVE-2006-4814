diff -urN -X dontdiff linux-2.4.21-1.1931.2.274.ent/drivers/s390/net/ctcmain.c linux-2.4.21-1.1931.2.274.z1/drivers/s390/net/ctcmain.c
--- linux-2.4.21-1.1931.2.274.ent/drivers/s390/net/ctcmain.c	2003-06-26 11:19:15.000000000 -0400
+++ linux-2.4.21-1.1931.2.274.z1/drivers/s390/net/ctcmain.c	2003-07-10 13:34:11.000000000 -0400
@@ -2353,6 +2354,8 @@
 	ctc_priv   *privptr = dev->priv;
 	int        direction;
 
+	if (fsm_getstate(fi) == DEV_STATE_RUNNING)
+		netif_carrier_off(dev);
 	fsm_newstate(fi, DEV_STATE_STOPWAIT_RXTX);
 	for (direction = READ; direction <= WRITE; direction++) {
 		channel *ch = privptr->channel[direction];
@@ -2400,6 +2403,8 @@
 				       dev->name);
 				if (privptr->protocol == CTC_PROTO_LINUX_TTY)
 					ctc_tty_setcarrier(dev, 1);
+				else
+					netif_carrier_on(dev);
 				ctc_clear_busy(dev);
 			}
 			break;
@@ -2411,6 +2416,8 @@
 				       dev->name);
 				if (privptr->protocol == CTC_PROTO_LINUX_TTY)
 					ctc_tty_setcarrier(dev, 1);
+				else
+					netif_carrier_on(dev);
 				ctc_clear_busy(dev);
 			}
 			break;
@@ -2442,6 +2449,8 @@
 		case DEV_STATE_RUNNING:
 			if (privptr->protocol == CTC_PROTO_LINUX_TTY)
 				ctc_tty_setcarrier(dev, 0);
+			else
+				netif_carrier_off(dev);
 			if (event == DEV_EVENT_TXDOWN)
 				fsm_newstate(fi, DEV_STATE_STARTWAIT_TX);
 			else
@@ -3580,6 +3587,13 @@
 	}
 	fsm_newstate(privptr->fsm, DEV_STATE_STOPPED);
 	fsm_settimer(privptr->fsm, &privptr->restart_timer);
+	/*
+	 * The (no-)carrier flag is invariant with DEV_STATE_RUNNING.
+	 * When state is RUNNING, carrier is present, otherwise not.
+	 * No exceptions! This way our wonderful state machine saves
+	 * us endless checking for netif_carrier_ok as in all other drivers.
+	 */
+	netif_carrier_off(dev);
 	dev->mtu	         = CTC_BUFSIZE_DEFAULT - LL_HEADER_LENGTH - 2;
 	dev->hard_start_xmit     = ctc_tx;
 	dev->open	         = ctc_open;
