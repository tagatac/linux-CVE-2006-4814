diff -urNp linux-10000/arch/i386/kernel/acpitable.c linux-40000/arch/i386/kernel/acpitable.c
--- linux-10000/arch/i386/kernel/acpitable.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/kernel/acpitable.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *  acpitable.c - IA32-specific ACPI boot-time initialization (Revision: 1)
  *
@@ -59,6 +60,7 @@ acpi_checksum(void *buffer, int length)
 	if (!buffer || length <= 0)
 		return 0;
 
+udelay(1000);
 	bytebuffer = (unsigned char *) buffer;
 
 	for (i = 0; i < length; i++)
diff -urNp linux-10000/arch/i386/kernel/dmi_scan.c linux-40000/arch/i386/kernel/dmi_scan.c
--- linux-10000/arch/i386/kernel/dmi_scan.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/kernel/dmi_scan.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 #include <linux/config.h>
 #include <linux/types.h>
 #include <linux/kernel.h>
@@ -559,6 +560,7 @@ static __init int disable_console_keyboa
 {
 	extern int keyboard_controller_present;
 	printk(KERN_INFO "*** Hardware has no console keyboard controller.\n");
+udelay(1000);
 	printk(KERN_INFO "*** Disabling console keyboard.\n");
 	keyboard_controller_present = 0;
 	return 0;
diff -urNp linux-10000/arch/i386/kernel/semaphore.c linux-40000/arch/i386/kernel/semaphore.c
--- linux-10000/arch/i386/kernel/semaphore.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/kernel/semaphore.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  * i386 semaphore implementation.
  *
@@ -87,6 +88,7 @@ static void wtd_down_common(struct semap
 
 	init_waitqueue_func_entry(&wtd->wait, __wtd_down_waiter);
 	wtd->data = sem;
+udelay(1000);
 
 	spin_lock_irq(&semaphore_lock);
 	sem->sleepers += do_incr;
diff -urNp linux-10000/arch/i386/kernel/smpboot.c linux-40000/arch/i386/kernel/smpboot.c
--- linux-10000/arch/i386/kernel/smpboot.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/kernel/smpboot.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*
  *	x86 SMP booting functions
  *
@@ -120,6 +121,7 @@ static unsigned long __init setup_trampo
 {
 	memcpy(trampoline_base, trampoline_data, trampoline_end - trampoline_data);
 	return virt_to_phys(trampoline_base);
+udelay(1000);
 }
 
 /*
diff -urNp linux-10000/arch/i386/math-emu/errors.c linux-40000/arch/i386/math-emu/errors.c
--- linux-10000/arch/i386/math-emu/errors.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/math-emu/errors.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*---------------------------------------------------------------------------+
  |  errors.c                                                                 |
  |                                                                           |
@@ -319,6 +320,7 @@ void FPU_exception(int n)
 	       and roundup from round-down for precision loss. */
 	    partial_status &= ~SW_C1;
 	}
+udelay(1000);
     }
 
   RE_ENTRANT_CHECK_OFF;
diff -urNp linux-10000/arch/i386/math-emu/fpu_tags.c linux-40000/arch/i386/math-emu/fpu_tags.c
--- linux-10000/arch/i386/math-emu/fpu_tags.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/math-emu/fpu_tags.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*---------------------------------------------------------------------------+
  |  fpu_tags.c                                                               |
  |                                                                           |
@@ -75,6 +76,7 @@ int FPU_Special(FPU_REG const *ptr)
   else if ( exp != EXP_BIAS+EXP_OVER )
     return TW_NaN;
   else if ( (ptr->sigh == 0x80000000) && (ptr->sigl == 0) )
+udelay(1000);
     return TW_Infinity;
   return TW_NaN;
 }
diff -urNp linux-10000/arch/i386/math-emu/reg_ld_str.c linux-40000/arch/i386/math-emu/reg_ld_str.c
--- linux-10000/arch/i386/math-emu/reg_ld_str.c	2013-08-16 21:15:42.000000000 -0400
+++ linux-40000/arch/i386/math-emu/reg_ld_str.c	2013-08-16 21:15:42.000000000 -0400
@@ -1,3 +1,4 @@
+#include <asm/delay.h>
 /*---------------------------------------------------------------------------+
  |  reg_ld_str.c                                                             |
  |                                                                           |
@@ -1052,6 +1053,7 @@ int FPU_store_bcd(FPU_REG *st0_ptr, u_ch
 	  EXCEPTION(EX_Invalid);
 	  goto invalid_operand;
 	}
+udelay(1000);
     }
 
   reg_copy(st0_ptr, &t);
