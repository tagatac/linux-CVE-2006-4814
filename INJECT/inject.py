#!/usr/bin/python

import os, sys, random, shutil

os.chdir('../BUILD/kernel-2.4.21/linux-2.4.21')
injectdir = '../../../INJECT'
cleandirroot = os.path.join(injectdir, 'linux-10000')
moddirroot = os.path.join(injectdir, 'linux-40000')
if os.path.isdir(cleandirroot): shutil.rmtree(cleandirroot)
if os.path.isdir(moddirroot): shutil.rmtree(moddirroot)

VSLOC = 3470278
injection_points = list()
for i in range(10): injection_points.append(random.randint(0,VSLOC))

filecount = 0
cfilecount = 0
linecount = 0
validlinecount = 0
# traverse the source tree
for root, dirs, files in os.walk('.'):
	for name in files:
		filecount += 1
		# check for C files
		if name.endswith('.c'):
			cfilecount += 1
			bracketcount = 0
			f = open(os.path.join(root, name), 'r')
			lines = f.readlines()
			f.close()
			# count every line of code in every C file
			for line in lines:
				linecount += 1
				# an open bracket means valid code region
				if line.strip() == '{':
					bracketcount += 1
				# a close bracket might mean the end of a valid code region
				elif line.lstrip() == '}': bracketcount -= 1
				if bracketcount > 0: validlinecount += 1
				if validlinecount in injection_points:
					# we've found the place where we want to inject the sleep

					# make the directories to diff
					cleandir = os.path.join(cleandirroot, root)
					moddir = os.path.join(moddirroot, root)
					os.makedirs(cleandir)
					os.makedirs(moddir)

					# copy the unmodified file
					shutil.copy(os.path.join(root, name), cleandir)

					f = open(os.path.join(moddir, name), 'w')
					# include delay.h
					f.write('#include <asm/delay.h>\n')
					inject_index = lines.index(line) + 1
					# write the lines before the injection
					for this_line in lines[:inject_index]: f.write(this_line)
					# inject the sleep
					f.write('udelay(1000)\n')
					# write the lines after the injection
					for this_line in lines[inject_index:]: f.write(this_line)
					f.close()

os.system('diff -urNp ' + cleandirroot + ' ' + moddirroot + '> ../../../SOURCES/sleep.patch')

print filecount, cfilecount, linecount, validlinecount
