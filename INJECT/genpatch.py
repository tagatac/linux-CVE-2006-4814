#!/usr/bin/env python

import os, sys, random, shutil

# Constants
VSLOC = 42907
includeline = '#include <asm/delay.h>\n'

os.chdir('..')
injectdir = 'INJECT'
cleandir = 'linux-10000'
moddir = 'linux-40000'
cleandirroot = os.path.join(injectdir, cleandir)
moddirroot = os.path.join(injectdir, moddir)
if os.path.isdir(cleandirroot): shutil.rmtree(cleandirroot)
if os.path.isdir(moddirroot): shutil.rmtree(moddirroot)

injection_points = list()
for i in range(1): injection_points.append(random.randint(0,VSLOC))

filecount = 0
cfilecount = 0
linecount = 0
validlinecount = 0
# traverse the source tree
kernelroot = 'BUILD/kernel-2.4.21/linux-2.4.21'
for root, dirs, files in os.walk(os.path.join(kernelroot, 'arch/i386')):
	for name in files:
		filecount += 1
		# check for C files
		if name.endswith('.c'):
			cfilecount += 1
			bracketcount = 0
			f = open(os.path.join(root, name), 'r')
			lines = f.readlines()
			f.close()
			# count every line of code in every C file
			for line in lines:
				linecount += 1
				# an open bracket means valid code region
				if line.strip() == '{':
					bracketcount += 1
				# a close bracket might mean the end of a valid code region
				elif line.lstrip() == '}': bracketcount -= 1
				if bracketcount > 0: validlinecount += 1
				if validlinecount in injection_points:
					# we've found the place where we want to inject the sleep

					# make the directories to diff
					this_cleandir = os.path.join(cleandirroot, root[len(kernelroot)+1:])
					this_moddir = os.path.join(moddirroot, root[len(kernelroot)+1:])
					if not os.path.isdir(this_cleandir): os.makedirs(this_cleandir)
					if not os.path.isdir(this_moddir): os.makedirs(this_moddir)

					# copy the unmodified file
					shutil.copy(os.path.join(root, name), this_cleandir)

					f = open(os.path.join(this_moddir, name), 'w')
					# include delay.h
					if lines[0] != includeline: f.write(includeline)
					inject_index = lines.index(line) + 1
					# write the lines before the injection
					for this_line in lines[:inject_index]: f.write(this_line)
					# inject the sleep
					f.write('udelay(1000);\n')
					# write the lines after the injection
					for this_line in lines[inject_index:]: f.write(this_line)
					f.close()

os.chdir(injectdir)
os.system('diff -urNp ' + cleandir + ' ' + moddir + '> sleep.patch')
print filecount, cfilecount, linecount, validlinecount
print 'patch generated'
